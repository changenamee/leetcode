class Solution {
public:
    vector<string> letterCombinations(string digits) {
        vector<string> res;
        if(digits.length()==0)  return res;
        map<char,string> phone{
            {'2',"abc"},
            {'3',"def"},
            {'4',"ghi"},
            {'5',"jkl"},
            {'6',"mno"},
            {'7',"pqrs"},
            {'8',"tuv"},
            {'9',"wxyz"}
        };
        string temp;
        backtrace(res,0,temp,phone,digits);
        return res;
    }
    void backtrace(vector<string> &res,int index,string &temp,
                    const map<char,string> &phone,const string &digits){
        
        if(index == digits.length()){
            res.push_back(temp);
        }else{
            char c = digits[index];
            string s = phone.at(c);
            //回溯
            for(const char &ch:s){
                temp.push_back(ch);
                backtrace(res,index+1,temp,phone,digits);
                temp.pop_back();
            }
        }
    }
};
